name: CI/CD Dev Pipeline

on:
    push:
      branches:
        - develop
    pull_request:
      branches:
        - develop
  
env:
  ENVIRONMENT: dev
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXTAUTH_SECRET }}
  NEXT_PUBLIC_SOCKET_URL: ${{ secrets.NEXT_PUBLIC_SOCKET_URL }}


jobs:
  deps-vulnerability:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
            cd ./satsquare
            npm ci
    
      - uses: oke-py/npm-audit-action@v2.4
        with:
          audit_level: moderate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_assignees: oke-py
          issue_labels: vulnerability,test
          dedupe_issues: true
      
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run Linting
        run: npm run lint
        
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run Jest Unit Tests
        run: npm run test:watch
        
  codecov:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run tests and generate coverage report
        run: npm run test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security analysis
        uses: github/codeql-action/analyze@v2
        
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run Lighthouse CI
        run: npx lhci autorun

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/ismail-mouyahada/sat-square:dev-${{ github.sha }} -f Dockerfile.dev .

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@v0.4.1
        with:
          image-ref: ghcr.io/ismail-mouyahada/sat-square:dev-${{ github.sha }}

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/ismail-mouyahada/sat-square:dev-${{ github.sha }}

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run end-to-end tests
        run: npm run test:e2e
        
  stress-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run stress tests
        run: npm run test:stress

  notify:
    runs-on: ubuntu-latest
    needs: [deps-vulnerability, lint, unit-tests, codecov, security, lighthouse, docker-build, e2e-tests, stress-test]
    steps:
      - name: Send Discord notification on success
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "CI/CD Dev Pipeline succeeded!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
          
      - name: Send Discord notification on failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "CI/CD Dev Pipeline failed!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
